# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: atlassian/default-image:3

definitions:
  steps:
    - step: &build-step
        name: SonarQube analysis
        script:
          - pipe: sonarsource/sonarqube-scan:2.0.1
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL} # Get the value from the repository/workspace variable.
              SONAR_TOKEN: ${SONAR_TOKEN} # Get the value from the repository/workspace variable. You shouldn't set secret in clear text here.
  caches:
    sonar: ~/.sonar

clone:
  depth: full


pipelines:
  branches:
    main:
      - step:
          name: Install Node.js 20 and dependencies
          caches:
            - node
          script:
            - curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            - sudo apt-get install -y nodejs
            - npm install -g npm@latest

      - step:
          name: Run SonarQube code analysis
          caches:
            - node
          script:
            - npm install sonarqube-scanner -g
            - sonar-scanner \
                -Dsonar.host.url=http://your-sonarqube-url:9000 \
                -Dsonar.login=sqp_c5b9ab6a2d23880bfc4a52a2985af7fb71ed9d1b \
                -Dsonar.projectKey=pac-5-catolica_get-your-guide-frontend_052bc07e-729d-4fc5-a5a4-156efc7aeda8v \
                -Dsonar.sources=.
                # Add more configuration options as needed


      - step:
          name: Build Project
          caches:
            - node
          script:
            - npm install
            - npm run build

      - step:
          name: Deploy to Netlify
          deployment: production
          caches:
            - node
          script:
            - curl -X POST -d {} https://api.netlify.com/build_hooks/663af2cb8e221eaa2800b833

