# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: atlassian/default-image:3

clone:
  depth: full


definitions:
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
  steps:
  - step: &build-test-sonarcloud
      name: Build, test and analyze on SonarCloud
      caches:
        - ************************** # See
        https://confluence.atlassian.com/bitbucket/caching-dependencies-895552876.html
      
        - sonar
      script:
        - ************************** # Build your project and run
        - pipe: sonarsource/sonarcloud-scan:2.0.0
  - step: &check-quality-gate-sonarcloud
      name: Check the Quality Gate on SonarCloud
      script:
        - pipe: sonarsource/sonarcloud-quality-gate:0.1.6

image: node:20.11.0
pipelines:
  branches:
    main:
      - step:
          name: Install Node.js 20 and dependencies
          script:
            - npm install

      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud

      - step:
          name: Build Project
          script:
            - npm install
            - npm run build

      - step:
          name: Deploy to Netlify
          deployment: production
          script:
            - curl -X POST -d {} https://api.netlify.com/build_hooks/663af2cb8e221eaa2800b833
          
  pull-requests:
    '**':
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud